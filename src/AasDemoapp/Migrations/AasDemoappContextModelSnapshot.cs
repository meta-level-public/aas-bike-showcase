// <auto-generated />
using System;
using AasDemoapp.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AasDemoapp.Migrations
{
    [DbContext(typeof(AasDemoappContext))]
    partial class AasDemoappContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("AasDemoapp.Database.Model.Address", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Land")
                        .HasColumnType("TEXT");

                    b.Property<double?>("Lat")
                        .HasColumnType("REAL");

                    b.Property<double?>("Long")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ort")
                        .HasColumnType("TEXT");

                    b.Property<string>("Plz")
                        .HasColumnType("TEXT");

                    b.Property<string>("Strasse")
                        .HasColumnType("TEXT");

                    b.Property<string>("Vorname")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("AasDemoapp.Database.Model.ConfiguredProduct", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AasId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("GlobalAssetId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("ConfiguredProducts");
                });

            modelBuilder.Entity("AasDemoapp.Database.Model.ImportedShell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AasId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RemoteAasRegistryUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RemoteRegistryUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RemoteSmRegistryUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ImportedShells");
                });

            modelBuilder.Entity("AasDemoapp.Database.Model.KatalogEintrag", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AasId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("GlobalAssetId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("KatalogEintragTyp")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Kategorie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LocalAasId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int?>("Rating")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ReferencedTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RemoteRepositoryUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("SupplierId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ReferencedTypeId");

                    b.HasIndex("SupplierId");

                    b.ToTable("KatalogEintraege");
                });

            modelBuilder.Entity("AasDemoapp.Database.Model.ProducedProduct", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AasId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("ConfiguredProductId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("GlobalAssetId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<long>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("PCFValue")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("ProductionDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ConfiguredProductId");

                    b.HasIndex("OrderId");

                    b.ToTable("ProducedProducts");
                });

            modelBuilder.Entity("AasDemoapp.Database.Model.ProductPart", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ConfiguredProductId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("KatalogEintragId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<long?>("ProducedProductId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UsageDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ConfiguredProductId");

                    b.HasIndex("KatalogEintragId");

                    b.HasIndex("ProducedProductId");

                    b.ToTable("ProductParts");
                });

            modelBuilder.Entity("AasDemoapp.Database.Model.ProductionOrder", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("AddressId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Anzahl")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ConfiguredProductId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FertigstellungsDatum")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ProduktionAbgeschlossen")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("VersandDatum")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Versandt")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("ConfiguredProductId");

                    b.ToTable("ProductionOrders");
                });

            modelBuilder.Entity("AasDemoapp.Database.Model.Setting", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("AasDemoapp.Database.Model.Supplier", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RemoteAasRegistryUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RemoteAasRepositoryUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RemoteCdRepositoryUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RemoteDiscoveryUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RemoteSmRegistryUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RemoteSmRepositoryUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SecuritySetting")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("AasDemoapp.Database.Model.ToolRepo", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RemoteAasRegistryUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RemoteAasRepositoryUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RemoteCdRepositoryUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RemoteDiscoveryUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RemoteSmRegistryUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RemoteSmRepositoryUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SecuritySetting")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ToolRepos");
                });

            modelBuilder.Entity("AasDemoapp.Database.Model.UpdateableShell", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<long>("KatalogEintragId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdateFoundTimestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("KatalogEintragId");

                    b.ToTable("UpdateableShells");
                });

            modelBuilder.Entity("AasDemoapp.Database.Model.KatalogEintrag", b =>
                {
                    b.HasOne("AasDemoapp.Database.Model.KatalogEintrag", "ReferencedType")
                        .WithMany()
                        .HasForeignKey("ReferencedTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AasDemoapp.Database.Model.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ReferencedType");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("AasDemoapp.Database.Model.ProducedProduct", b =>
                {
                    b.HasOne("AasDemoapp.Database.Model.ConfiguredProduct", "ConfiguredProduct")
                        .WithMany("ProducedProducts")
                        .HasForeignKey("ConfiguredProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AasDemoapp.Database.Model.ProductionOrder", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConfiguredProduct");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("AasDemoapp.Database.Model.ProductPart", b =>
                {
                    b.HasOne("AasDemoapp.Database.Model.ConfiguredProduct", "ConfiguredProduct")
                        .WithMany("Bestandteile")
                        .HasForeignKey("ConfiguredProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AasDemoapp.Database.Model.KatalogEintrag", "KatalogEintrag")
                        .WithMany()
                        .HasForeignKey("KatalogEintragId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AasDemoapp.Database.Model.ProducedProduct", "ProducedProduct")
                        .WithMany("Bestandteile")
                        .HasForeignKey("ProducedProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ConfiguredProduct");

                    b.Navigation("KatalogEintrag");

                    b.Navigation("ProducedProduct");
                });

            modelBuilder.Entity("AasDemoapp.Database.Model.ProductionOrder", b =>
                {
                    b.HasOne("AasDemoapp.Database.Model.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AasDemoapp.Database.Model.ConfiguredProduct", "ConfiguredProduct")
                        .WithMany()
                        .HasForeignKey("ConfiguredProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("ConfiguredProduct");
                });

            modelBuilder.Entity("AasDemoapp.Database.Model.UpdateableShell", b =>
                {
                    b.HasOne("AasDemoapp.Database.Model.KatalogEintrag", "KatalogEintrag")
                        .WithMany()
                        .HasForeignKey("KatalogEintragId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KatalogEintrag");
                });

            modelBuilder.Entity("AasDemoapp.Database.Model.ConfiguredProduct", b =>
                {
                    b.Navigation("Bestandteile");

                    b.Navigation("ProducedProducts");
                });

            modelBuilder.Entity("AasDemoapp.Database.Model.ProducedProduct", b =>
                {
                    b.Navigation("Bestandteile");
                });
#pragma warning restore 612, 618
        }
    }
}
